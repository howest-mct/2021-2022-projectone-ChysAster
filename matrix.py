from time import sleep, time
from spidev import SpiDev
from time import sleep
spi = SpiDev()
spi.open(0, 0)  # Bus is 0, device is de gekozen CE-pin (0 of 1)
spi.max_speed_hz = 100  # Klokfrequentie instellen


def timer():
    spi.writebytes([0x1, 0b10000000])
    spi.writebytes([0x2, 0b00000000])
    spi.writebytes([0x3, 0b00000000])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11000000])
    spi.writebytes([0x2, 0b00000000])
    spi.writebytes([0x3, 0b00000000])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11100000])
    spi.writebytes([0x2, 0b00000000])
    spi.writebytes([0x3, 0b00000000])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11110000])
    spi.writebytes([0x2, 0b00000000])
    spi.writebytes([0x3, 0b00000000])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111000])
    spi.writebytes([0x2, 0b00000000])
    spi.writebytes([0x3, 0b00000000])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111100])
    spi.writebytes([0x2, 0b00000000])
    spi.writebytes([0x3, 0b00000000])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111110])
    spi.writebytes([0x2, 0b00000000])
    spi.writebytes([0x3, 0b00000000])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000000])
    spi.writebytes([0x3, 0b00000000])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000000])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000000])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000000])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000000])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000000])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000001])
    spi.writebytes([0x8, 0b00000000])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000001])
    spi.writebytes([0x8, 0b00000001])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000001])
    spi.writebytes([0x8, 0b00000011])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000001])
    spi.writebytes([0x8, 0b00000111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000001])
    spi.writebytes([0x8, 0b00001111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000001])
    spi.writebytes([0x8, 0b00011111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000001])
    spi.writebytes([0x8, 0b00111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000001])
    spi.writebytes([0x8, 0b01111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b00000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b00000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b00000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b00000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b00000001])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b00000001])
    spi.writebytes([0x3, 0b10000001])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b10000001])
    spi.writebytes([0x3, 0b10000001])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11000001])
    spi.writebytes([0x3, 0b10000001])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11100001])
    spi.writebytes([0x3, 0b10000001])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11110001])
    spi.writebytes([0x3, 0b10000001])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111001])
    spi.writebytes([0x3, 0b10000001])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111101])
    spi.writebytes([0x3, 0b10000001])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000001])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000001])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000001])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b10000001])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b10000011])
    spi.writebytes([0x7, 0b10000001])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b10000011])
    spi.writebytes([0x7, 0b10000011])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b10000011])
    spi.writebytes([0x7, 0b10000111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b10000011])
    spi.writebytes([0x7, 0b10001111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b10000011])
    spi.writebytes([0x7, 0b10011111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b10000011])
    spi.writebytes([0x7, 0b10111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b10000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b10000011])
    spi.writebytes([0x6, 0b10000011])
    spi.writebytes([0x7, 0b10111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b10000011])
    spi.writebytes([0x5, 0b11000011])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b10000011])
    spi.writebytes([0x4, 0b11000011])
    spi.writebytes([0x5, 0b11000011])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11000011])
    spi.writebytes([0x4, 0b11000011])
    spi.writebytes([0x5, 0b11000011])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11100011])
    spi.writebytes([0x4, 0b11000011])
    spi.writebytes([0x5, 0b11000011])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11110011])
    spi.writebytes([0x4, 0b11000011])
    spi.writebytes([0x5, 0b11000011])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111011])
    spi.writebytes([0x4, 0b11000011])
    spi.writebytes([0x5, 0b11000011])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111111])
    spi.writebytes([0x4, 0b11000011])
    spi.writebytes([0x5, 0b11000011])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111111])
    spi.writebytes([0x4, 0b11000111])
    spi.writebytes([0x5, 0b11000011])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111111])
    spi.writebytes([0x4, 0b11000111])
    spi.writebytes([0x5, 0b11000111])
    spi.writebytes([0x6, 0b11000011])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111111])
    spi.writebytes([0x4, 0b11000111])
    spi.writebytes([0x5, 0b11000111])
    spi.writebytes([0x6, 0b11000111])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111111])
    spi.writebytes([0x4, 0b11000111])
    spi.writebytes([0x5, 0b11000111])
    spi.writebytes([0x6, 0b11001111])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111111])
    spi.writebytes([0x4, 0b11000111])
    spi.writebytes([0x5, 0b11000111])
    spi.writebytes([0x6, 0b11011111])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111111])
    spi.writebytes([0x4, 0b11000111])
    spi.writebytes([0x5, 0b11000111])
    spi.writebytes([0x6, 0b11111111])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111111])
    spi.writebytes([0x4, 0b11000111])
    spi.writebytes([0x5, 0b11100111])
    spi.writebytes([0x6, 0b11111111])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)
    spi.writebytes([0x1, 0b11111111])
    spi.writebytes([0x2, 0b11111111])
    spi.writebytes([0x3, 0b11111111])
    spi.writebytes([0x4, 0b11100111])
    spi.writebytes([0x5, 0b11100111])
    spi.writebytes([0x6, 0b11111111])
    spi.writebytes([0x7, 0b11111111])
    spi.writebytes([0x8, 0b11111111])
    sleep(1)


def cijferEen():
    spi.writebytes([0x1, 0b00001000])
    spi.writebytes([0x2, 0b00011000])
    spi.writebytes([0x3, 0b00001000])
    spi.writebytes([0x4, 0b00001000])
    spi.writebytes([0x5, 0b00001000])
    spi.writebytes([0x6, 0b00001000])
    spi.writebytes([0x7, 0b00001000])
    spi.writebytes([0x8, 0b00011100])
    sleep(1)


def cijferTwee():
    spi.writebytes([0x1, 0b00000000])
    spi.writebytes([0x2, 0b00111000])
    spi.writebytes([0x3, 0b01000100])
    spi.writebytes([0x4, 0b00000100])
    spi.writebytes([0x5, 0b00001000])
    spi.writebytes([0x6, 0b00010000])
    spi.writebytes([0x7, 0b00100000])
    spi.writebytes([0x8, 0b01111100])
    sleep(1)


def cijferDrie():
    spi.writebytes([0x1, 0b00000000])
    spi.writebytes([0x2, 0b00111000])
    spi.writebytes([0x3, 0b01000100])
    spi.writebytes([0x4, 0b00000100])
    spi.writebytes([0x5, 0b00011000])
    spi.writebytes([0x6, 0b00000100])
    spi.writebytes([0x7, 0b01000100])
    spi.writebytes([0x8, 0b00111000])
    sleep(1)


def cijferVier():
    spi.writebytes([0x1, 0b00000000])
    spi.writebytes([0x2, 0b00000100])
    spi.writebytes([0x3, 0b00001100])
    spi.writebytes([0x4, 0b00010100])
    spi.writebytes([0x5, 0b00100100])
    spi.writebytes([0x6, 0b01111110])
    spi.writebytes([0x7, 0b00000100])
    spi.writebytes([0x8, 0b00000100])
    sleep(1)


def cijferVijf():
    spi.writebytes([0x1, 0b00000000])
    spi.writebytes([0x2, 0b00111110])
    spi.writebytes([0x3, 0b00100000])
    spi.writebytes([0x4, 0b00111100])
    spi.writebytes([0x5, 0b0000010])
    spi.writebytes([0x6, 0b00000010])
    spi.writebytes([0x7, 0b00100010])
    spi.writebytes([0x8, 0b00011100])
    sleep(1)


def clear_memory():
    spi.writebytes([0x1, 0])
    spi.writebytes([0x2, 0])
    spi.writebytes([0x3, 0])
    spi.writebytes([0x4, 0])
    spi.writebytes([0x5, 0])
    spi.writebytes([0x6, 0])
    spi.writebytes([0x7, 0])
    spi.writebytes([0x8, 0])


def teken_vierkant():
    spi.writebytes([0x1, 0])
    spi.writebytes([0x2, 0b01111110])
    spi.writebytes([0x3, 0b01000010])
    spi.writebytes([0x4, 0b01000010])
    spi.writebytes([0x5, 0b01000010])
    spi.writebytes([0x6, 0b01000010])
    spi.writebytes([0x7, 0b01111110])
    spi.writebytes([0x8, 0])


def setup():
    spi.writebytes([0x9, 0])
    spi.writebytes([0xa, 0])
    spi.writebytes([0xb, 7])
    spi.writebytes([0xc, 1])


oudestatus = 0b00000001
try:
    setup()
    while True:
        timer()
        cijferEen()
        timer()
        cijferTwee()
        timer()
        cijferDrie()
        timer()
        cijferVier()
        timer()
        cijferVijf()


except KeyboardInterrupt as e:
    print(e)

finally:
    clear_memory()
    print("script has stopped")
